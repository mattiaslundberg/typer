---
- hosts: typer
  become: true
  gather_facts: no

  pre_tasks:
    - raw: apt-get install -y python-simplejson

  tasks:
    - name: Upgrade system
      apt: upgrade=dist update_cache=yes

    - name: Install nginx
      apt: name=nginx state=latest

    - name: Install MongoDB
      apt: name=mongodb state=latest

    - name: Install letsencrypt
      apt: name=letsencrypt state=latest

    - name: Install Python
      apt:
        name: python3-pip
        state: latest

    - name: Install virtualenv
      pip: executable=pip3 name=virtualenv state=latest

    - name: Create virtualenv for eve
      command: virtualenv --no-site-packages --python python3 ~/venvs/eve
      args:
        creates: ~/venvs/eve

    - name: Install Eve service
      template:
        src: templates/eved.service.j2
        dest: /lib/systemd/system/eved.service

    - name: Compile js bundle locally
      command: node node_modules/webpack/bin/webpack.js -vpc --config webpack.config.prod.js
      delegate_to: 127.0.0.1
      become: no

    - name: Deploy html
      copy:
        src: ../index.html
        dest: /var/www/{{ domain_name }}/

    - name: Deploy js bundle
      copy:
        src: ../dist/bundle.js
        dest: /var/www/{{ domain_name }}/

    - name: Deploy eve application
      copy:
        src: ../server/
        dest: /var/www/{{ domain_name }}/

    - name: Install python requirements
      command: /root/venvs/eve/bin/pip install -r /var/www/{{ domain_name }}/requirements.txt

    - name: Reload daemons
      command: systemctl daemon-reload

    - name: Restart and Enable Eve service
      service:
        name: eved
        enabled: yes
        state: restarted

    - name: Create letsencrypt directory
      file: name=/var/www/letsencrypt state=directory

    - name: Remove default nginx config
      file: name=/etc/nginx/sites-enabled/default state=absent

    - name: Install system nginx config
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf

    - name: Install nginx site for letsencrypt requests
      template:
        src: templates/nginx-http.j2
        dest: /etc/nginx/sites-enabled/http

    - name: Reload nginx to activate letsencrypt site
      service: name=nginx state=restarted

    - name: Create letsencrypt certificate
      shell: letsencrypt certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }}
      args:
        creates: /etc/letsencrypt/live/{{ domain_name }}

    - name: Generate dhparams
      shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
      args:
        creates: /etc/nginx/dhparams.pem

    - name: Install nginx site for specified site
      template:
        src: templates/nginx-app.j2
        dest: /etc/nginx/sites-enabled/app

    - name: Reload nginx to activate specified site
      service: name=nginx state=restarted

    - name: Add letsencrypt cronjob for cert renewal
      cron:
        special_time: weekly
        job: letsencrypt --renew certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }}  && service nginx reload
