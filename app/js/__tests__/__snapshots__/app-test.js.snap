exports[`AppTest Renders TextSelector 1`] = `
<div>
  <function OAuth(props) {/* istanbul ignore next */_classCallCheck(this, OAuth);var _this = _possibleConstructorReturn(this, (OAuth.__proto__ || Object.getPrototypeOf(OAuth)).call(this,
      props));
      /* istanbul ignore next */_this.state = {};
  
      /* istanbul ignore next */(0, _net.get)("/api/oauth/").then(
      function (response) /* istanbul ignore next */{return (/* istanbul ignore next */_this.handleResponse(response));},
      function (error) /* istanbul ignore next */{return (/* istanbul ignore next */_this.setState({ error: "Failed to get login url" }));}); /* istanbul ignore next */return _this;
  
    } />
  <function TextSelector() {/* istanbul ignore next */_classCallCheck(this, TextSelector);var _this = _possibleConstructorReturn(this, (TextSelector.__proto__ || Object.getPrototypeOf(TextSelector)).call(this));
  
  
      /* istanbul ignore next */_this.state = {
        isUploading: false };
  
  
      /* istanbul ignore next */_this.onAddClick = /* istanbul ignore next */_this.onAddClick.bind( /* istanbul ignore next */_this);
      /* istanbul ignore next */_this.onNewCancel = /* istanbul ignore next */_this.onNewCancel.bind( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;
    }
    onSelect={[Function]}
    options={Array []} />
</div>
`;

exports[`AppTest Renders TextSelector 2`] = `
<div>
  <function OAuth(props) {/* istanbul ignore next */_classCallCheck(this, OAuth);var _this = _possibleConstructorReturn(this, (OAuth.__proto__ || Object.getPrototypeOf(OAuth)).call(this,
      props));
      /* istanbul ignore next */_this.state = {};
  
      /* istanbul ignore next */(0, _net.get)("/api/oauth/").then(
      function (response) /* istanbul ignore next */{return (/* istanbul ignore next */_this.handleResponse(response));},
      function (error) /* istanbul ignore next */{return (/* istanbul ignore next */_this.setState({ error: "Failed to get login url" }));}); /* istanbul ignore next */return _this;
  
    } />
  <function TextSelector() {/* istanbul ignore next */_classCallCheck(this, TextSelector);var _this = _possibleConstructorReturn(this, (TextSelector.__proto__ || Object.getPrototypeOf(TextSelector)).call(this));
  
  
      /* istanbul ignore next */_this.state = {
        isUploading: false };
  
  
      /* istanbul ignore next */_this.onAddClick = /* istanbul ignore next */_this.onAddClick.bind( /* istanbul ignore next */_this);
      /* istanbul ignore next */_this.onNewCancel = /* istanbul ignore next */_this.onNewCancel.bind( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;
    }
    onSelect={[Function]}
    options={
      Array [
        Object {
          "name": "one",
          "value": "one",
        },
      ]
    } />
</div>
`;

exports[`AppTest Renders Typer after text is set 1`] = `
<div>
  <function OAuth(props) {/* istanbul ignore next */_classCallCheck(this, OAuth);var _this = _possibleConstructorReturn(this, (OAuth.__proto__ || Object.getPrototypeOf(OAuth)).call(this,
      props));
      /* istanbul ignore next */_this.state = {};
  
      /* istanbul ignore next */(0, _net.get)("/api/oauth/").then(
      function (response) /* istanbul ignore next */{return (/* istanbul ignore next */_this.handleResponse(response));},
      function (error) /* istanbul ignore next */{return (/* istanbul ignore next */_this.setState({ error: "Failed to get login url" }));}); /* istanbul ignore next */return _this;
  
    } />
  <function Typer(props) {/* istanbul ignore next */_classCallCheck(this, Typer);var _this = _possibleConstructorReturn(this, (Typer.__proto__ || Object.getPrototypeOf(Typer)).call(this,
      props));
  
      /* istanbul ignore next */_this.state = {
        typedSequence: "",
        charsTyped: 0 };
  
  
      /* istanbul ignore next */_this.onType = /* istanbul ignore next */_this.onType.bind( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;
    }
    fullText={
      Array [
        "H",
        "e",
        "l",
        "l",
        "o",
        " ",
        "w",
        "o",
        "r",
        "l",
        "d",
        "!",
      ]
    }
    onNewClick={[Function]} />
</div>
`;

exports[`AppTest Renders error view 1`] = `
<div>
  <function OAuth(props) {/* istanbul ignore next */_classCallCheck(this, OAuth);var _this = _possibleConstructorReturn(this, (OAuth.__proto__ || Object.getPrototypeOf(OAuth)).call(this,
      props));
      /* istanbul ignore next */_this.state = {};
  
      /* istanbul ignore next */(0, _net.get)("/api/oauth/").then(
      function (response) /* istanbul ignore next */{return (/* istanbul ignore next */_this.handleResponse(response));},
      function (error) /* istanbul ignore next */{return (/* istanbul ignore next */_this.setState({ error: "Failed to get login url" }));}); /* istanbul ignore next */return _this;
  
    } />
  <div
    className="error-message">
    Something went wrong
  </div>
</div>
`;

exports[`AppTest Renders login link after getting the url 1`] = `
<div>
  <function OAuth(props) {/* istanbul ignore next */_classCallCheck(this, OAuth);var _this = _possibleConstructorReturn(this, (OAuth.__proto__ || Object.getPrototypeOf(OAuth)).call(this,
      props));
      /* istanbul ignore next */_this.state = {};
  
      /* istanbul ignore next */(0, _net.get)("/api/oauth/").then(
      function (response) /* istanbul ignore next */{return (/* istanbul ignore next */_this.handleResponse(response));},
      function (error) /* istanbul ignore next */{return (/* istanbul ignore next */_this.setState({ error: "Failed to get login url" }));}); /* istanbul ignore next */return _this;
  
    } />
  <function TextSelector() {/* istanbul ignore next */_classCallCheck(this, TextSelector);var _this = _possibleConstructorReturn(this, (TextSelector.__proto__ || Object.getPrototypeOf(TextSelector)).call(this));
  
  
      /* istanbul ignore next */_this.state = {
        isUploading: false };
  
  
      /* istanbul ignore next */_this.onAddClick = /* istanbul ignore next */_this.onAddClick.bind( /* istanbul ignore next */_this);
      /* istanbul ignore next */_this.onNewCancel = /* istanbul ignore next */_this.onNewCancel.bind( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;
    }
    onSelect={[Function]}
    options={Array []} />
</div>
`;
